<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ru.rerumu.lists.dao.book.mapper.BookMapper">

    <resultMap id="BookStatusResultMap" type="ru.rerumu.lists.model.BookStatus_">
        <result column="status_id" property="statusId" />
        <result column="status_name" property="name" />
    </resultMap>

    <resultMap id="BookDTOResultMap" type="ru.rerumu.lists.model.book.BookDTO">
        <id property="bookId" column="book_id" javaType="Long"/>
        <result  property="readListId" column="book_list_id" javaType="Long"/>
        <result  property="title" column="book_title" javaType="String"/>
        <result  property="bookStatus" column="book_status_id_old" javaType="Integer"/>
        <result  property="insertDate" column="book_insert_date" javaType="Date"/>
        <result  property="lastUpdateDate" column="book_last_update_date" javaType="Date"/>
        <result  property="lastChapter" column="last_chapter" javaType="Integer"/>
        <result  property="note" column="book_note" javaType="String"/>
        <result  property="URL" column="book_url" javaType="String"/>
        <result  property="userId" column="book_user_id" javaType="Long"/>
        <association property="bookTypeObj" resultMap="ru.rerumu.lists.dao.book.type.BookTypeMapper.BookTypeDTOResultMap"/>
        <association property="bookStatusObj" resultMap="ru.rerumu.lists.dao.book.readingrecord.status.mapper.BookStatusMapper.BookStatusResultMap"/>
        <collection property="tags" resultMap="TagResultMap" />
    </resultMap>

    <resultMap id="BookResultMap" type="ru.rerumu.lists.dao.book.BookDtoDao">
        <id property="bookId" column="book_id" javaType="Long"/>
        <result  property="readListId" column="book_list_id" javaType="Long"/>
        <result  property="title" column="book_title" javaType="String"/>
        <result  property="bookStatus" column="book_status_id_old" javaType="Integer"/>
        <result  property="insertDate" column="book_insert_date" javaType="Date"/>
        <result  property="lastUpdateDate" column="book_last_update_date" javaType="Date"/>
        <result  property="lastChapter" column="last_chapter" javaType="Integer"/>
        <result  property="note" column="book_note" javaType="String"/>
        <result  property="URL" column="book_url" javaType="String"/>
        <result  property="userId" column="book_user_id" javaType="Long"/>
        <association property="bookTypeObj" resultMap="ru.rerumu.lists.dao.book.type.BookTypeMapper.BookTypeDTOResultMap"/>
        <collection
                property="previousBooks"
                ofType="ru.rerumu.lists.model.dto.BookOrderedDTO"
                resultMap="BookOrderedDTOResultMap"
                columnPrefix="previous_"
        />
        <collection property="tags" resultMap="TagResultMap" />
    </resultMap>



    <resultMap id="BookOrderedDTOResultMap" type="ru.rerumu.lists.model.dto.BookOrderedDTO">
        <result  property="order" column="book_series_order" javaType="Integer"/>
        <association
                property="bookDTO"
                resultMap="BookDTOResultMap"
        />
    </resultMap>

    <resultMap id="TagResultMap" type="ru.rerumu.lists.model.tag.TagDTO">
        <constructor>
            <idArg name="tagId" column="tag_id"/>
            <arg name="name" column="tag_name"/>
            <arg name="userId" column="tag_user_id"/>
        </constructor>
    </resultMap>


    <resultMap id="BookDTOChainedResultMap" type="ru.rerumu.lists.model.book.BookDTO">
        <id property="bookId" column="book_id" javaType="Long"/>
        <result  property="readListId" column="book_list_id" javaType="Long"/>
        <result  property="title" column="book_title" javaType="String"/>
        <result  property="bookStatus" column="book_status_id_old" javaType="Integer"/>
        <result  property="insertDate" column="book_insert_date" javaType="Date"/>
        <result  property="lastUpdateDate" column="book_last_update_date" javaType="Date"/>
        <result  property="lastChapter" column="last_chapter" javaType="Integer"/>
        <result  property="note" column="book_note" javaType="String"/>
        <result  property="URL" column="book_url" javaType="String"/>
        <result  property="userId" column="book_user_id" javaType="Long"/>
        <association property="bookTypeObj" resultMap="ru.rerumu.lists.dao.book.type.BookTypeMapper.BookTypeDTOResultMap"/>
        <association property="bookStatusObj" resultMap="ru.rerumu.lists.dao.book.readingrecord.status.mapper.BookStatusMapper.BookStatusResultMap"/>
        <collection
                property="previousBooks"
                ofType="ru.rerumu.lists.model.dto.BookOrderedDTO"
                resultMap="BookOrderedDTOResultMap"
                columnPrefix="previous_"
        />
        <collection
                property="tags"
                ofType="ru.rerumu.lists.model.tag.TagDTO"
                resultMap="TagResultMap"
        />
    </resultMap>

    <resultMap id="UserResultMap" type="ru.rerumu.lists.model.user.User">
        <constructor>
            <idArg column="user_id" name="userId" javaType="Long"/>
            <arg column="name" name="name" javaType="String"/>
            <arg column="password" name="password" javaType="String"/>
        </constructor>
    </resultMap>

    <sql id="selectBooks">
        select  b.book_id,
                b.list_list_id as book_list_id,
                b.title as book_title,
                s.STATUS_ID as book_status_id_old,
                b.insert_date AT TIME ZONE 'UTC' as book_insert_date,
                b.last_update_date AT TIME ZONE 'UTC' as book_last_update_date,
                b.last_chapter,
                bt.type_id as book_type_id,
                bt.name as book_type_name,
                s.STATUS_ID as book_status_id,
                s.NAME as book_status_name,
                b.note as book_note,
                b.url as book_url,
                b.user_user_id as book_user_id,
                t.tag_id as tag_id,
                t.name as tag_name,
                t.user_user_id as tag_user_id
        from books b
                inner join statuses s
                on s.STATUS_ID= b.status_status_id
                left outer join book_types bt
                                on bt.type_id = b.type_type_id
                left outer join books_tags btg
                    on btg.book_book_id = b.book_id
                left outer join tags t
                    on t.tag_id = btg.tag_tag_id
    </sql>

    <select id="getBookStatus">
        select s.key_name
        from statuses
        where STATUS_ID=#{statusId}
    </select>


    <select id="getOne" resultMap="BookDTOResultMap">
        <include refid="selectBooks"/>
        where b.book_id=#{bookId}
    </select>

    <select id="findById" resultMap="BookResultMap">
        <include refid="selectBooks"/>
        where b.book_id=#{bookId}
    </select>

    <select id="getAll" resultMap="BookDTOResultMap">
        <include refid="selectBooks"/>
        WHERE b.list_list_id=#{readListId}
    </select>

    <select id="findByUser" resultMap="BookDTOResultMap">
        <include refid="selectBooks"/>
        where b.user_user_id = #{userId}
    </select>

    <select id="getAllChained" resultMap="BookDTOChainedResultMap">
        <![CDATA[
            with s_prev as
            (
                with s_top as
                (
                    select max(sb.series_order) as top_order,
                           sb.series_series_id
                    from books b
                        inner join  series_books sb
                                on sb.book_book_id = b.book_id
                    group by sb.series_series_id
                )
                select b.book_Id as join_id,
                    b.title,
                    b2.book_id,
                    b2.list_list_id as book_list_id,
                    b2.title as book_title,
                    s.STATUS_ID as book_status_id_old,
                    b2.insert_date AT TIME ZONE 'UTC' as book_insert_date,
                    b2.last_update_date AT TIME ZONE 'UTC' as book_last_update_date,
                    b2.last_chapter,
                    bt.type_id as book_type_id,
                    bt.name as book_type_name,
                    s.STATUS_ID as book_status_id,
                    s.NAME as book_status_name,
                    b.note as book_note,
                    b.url as book_url,
                    b.user_user_id as book_user_id,
                    max(sb.series_order) over (partition by sb.series_series_id) as mtop,
				    sb2.series_order,
				    t.tag_id        as tag_id,
                    t.name          as tag_name,
                    t.user_user_id  as tag_user_id
                from books b

                     inner join series_books sb
                                on sb.book_book_id = b.book_id
                     inner join s_top
                                on s_top.series_series_id = sb.series_series_id
                                and s_top.top_order = sb.series_order
                     inner join series_books sb2
                                on sb2.series_series_id = sb.series_series_id
                     inner join books b2
                                on b2.book_id = sb2.book_book_id
                                and b2.book_Id != b.book_id
                     inner join statuses s
                                on s.STATUS_ID= b2.status_status_id
                     left outer join book_types bt
                                    on bt.type_id = b2.type_type_id
                     left outer join books_tags btg
                        on btg.book_book_id = b.book_id
                     left outer join tags t
                        on t.tag_id = btg.tag_tag_id

                order by b.book_id,  sb2.series_order desc

            ), s_wo_chain as
            (
              select b.book_id
              from books b

              except

              select sb.book_book_id
                from series_books sb
            )
            select  b.book_id,
                    b.list_list_id as book_list_id,
                    b.title as book_title,
                    s.STATUS_ID as book_status_id_old,
                    b.insert_date AT TIME ZONE 'UTC' as book_insert_date,
                    b.last_update_date AT TIME ZONE 'UTC' as book_last_update_date,
                    b.last_chapter,
                    bt.type_id as book_type_id,
                    bt.name as book_type_name,
                    s.STATUS_ID as book_status_id,
                    s.NAME as book_status_name,
                    b.note as book_note,
                    b.url as book_url,
                    b.user_user_id as book_user_id,
                    t.tag_id        as tag_id,
                    t.name          as tag_name,
                    t.user_user_id  as tag_user_id,
                    s_prev.book_id                  as previous_book_id,
                    s_prev.book_list_id             as previous_book_list_id,
                    s_prev.book_title               as previous_book_title,
                    s_prev.book_status_id_old       as previous_book_status_id_old,
                    s_prev.book_insert_date         as previous_book_insert_date,
                    s_prev.book_last_update_date    as previous_book_last_update_date,
                    s_prev.last_chapter             as previous_last_chapter,
                    s_prev.book_type_id             as previous_book_type_id,
                    s_prev.book_type_name           as previous_book_type_name,
                    s_prev.book_status_id           as previous_book_status_id,
                    s_prev.book_status_name         as previous_book_status_name,
                    s_prev.book_note                as previous_book_note,
					s_prev.series_order             as previous_book_series_order,
					s_prev.tag_id                   as previous_tag_id,
					s_prev.tag_name                 as previous_tag_name,
					s_prev.tag_user_id              as previous_tag_user_id
            from books b

                    inner join statuses s
                                on s.STATUS_ID= b.status_status_id
                    inner join s_prev
                                    on s_prev.join_id = b.book_id
                    left outer join book_types bt
                                    on bt.type_id = b.type_type_id
                    left outer join books_tags btg
                        on btg.book_book_id = b.book_id
                    left outer join tags t
                        on t.tag_id = btg.tag_tag_id


            WHERE b.list_list_id=#{readListId}

            union all

            select  b.book_id,
                    b.list_list_id as book_list_id,
                    b.title as book_title,
                    s.STATUS_ID as book_status_id_old,
                    b.insert_date AT TIME ZONE 'UTC' as book_insert_date,
                    b.last_update_date AT TIME ZONE 'UTC' as book_last_update_date,
                    b.last_chapter,
                    bt.type_id as book_type_id,
                    bt.name as book_type_name,
                    s.STATUS_ID as book_status_id,
                    s.NAME as book_status_name,
                    b.note as book_note,
                    b.url as book_url,
                    b.user_user_id as book_user_id,
                    t.tag_id        as tag_id,
                    t.name          as tag_name,
                    t.user_user_id  as tag_user_id,
                    null as previous_book_id,
                    null as previous_book_list_id,
                    null as previous_book_title,
                    null as previous_book_status_id_old,
                    null as previous_book_insert_date,
                    null as previous_book_last_update_date,
                    null as previous_last_chapter,
                    null as previous_book_type_id,
                    null as previous_book_type_name,
                    null as previous_book_status_id,
                    null as previous_book_status_name,
                    null as previous_book_note,
					null as previous_book_series_order,
					null as previous_tag_id,
					null as previous_tag_name,
					null as previous_tag_user_id
            from books b
                    inner join statuses s
                                on s.STATUS_ID= b.status_status_id
                    inner join s_wo_chain
                                    on s_wo_chain.book_id = b.book_id
                    left outer join book_types bt
                                    on bt.type_id = b.type_type_id
                    left outer join books_tags btg
                        on btg.book_book_id = b.book_id
                    left outer join tags t
                        on t.tag_id = btg.tag_tag_id
            WHERE b.list_list_id=#{readListId}
        ]]>
    </select>

    <update id="update">
        update books
        set title=#{title},
            status_status_id=#{statusId},
            insert_date=#{insertDate},
            last_update_date=#{lastUpdateDate},
            last_chapter = #{lastChapter},
            type_type_id = #{bookTypeId},
            note = #{note},
            url = #{URL}
        where book_id=#{bookId}
        and list_list_id=#{readListId}
    </update>

    <update id="updateAuthor">
        update books_authors
        set author_author_id=#{authorId},
            author_list_id=#{authorListId}
        where book_book_id=#{bookId}
        and book_list_id=#{readListId}
    </update>

    <select id="getNextId" resultType="Long">
        select max(book_id)+1 as res
        from books
    </select>

    <insert id="addOne">
        insert into books(book_id, list_list_id, status_status_id, insert_date, last_update_date, title, last_chapter, type_type_id, note, url, user_user_id)
        values(#{bookId}, #{readListId},#{statusId}, #{insertDate}, #{lastUpdateDate}, #{title}, #{lastChapter}, #{bookTypeId}, #{note}, #{URL}, #{userId})
    </insert>

    <delete id="delete">
        delete from books
        where book_id=#{bookId}
    </delete>

    <select id="getBookUser" resultMap="UserResultMap">
        select
            user_id,
            name,
            password
        from books b
            inner join lists l
                on l.list_id = b.list_list_id
            inner join users u
                on u.user_id = l.USER_USER_ID
        where b.book_id=#{bookId}
    </select>

</mapper>