<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ru.rerumu.lists.mappers.BookMapper">

    <resultMap id="BookResultMap" type="ru.rerumu.lists.model.Book">
        <result column="book_id" property="bookId" />
        <result column="list_list_id" property="readListId" />
        <result column="title" property="title"/>
        <result column="status_status_id" property="statusId"/>
        <result column="insert_date" property="insertDate" />
        <result column="last_update_date" property="lastUpdateDate" />
        <result column="last_chapter" property="lastChapter" />
        <result column="author_author_id" property="authorId" />
        <result column="series_series_id" property="seriesId" />
        <result column="series_order" property="seriesOrder" />
        <association property="bookStatus" resultMap="BookStatusResultMap" />
        <association property="author" resultMap="ru.rerumu.lists.mappers.AuthorMapper.AuthorResultMap" />
    </resultMap>

    <resultMap id="BookStatusResultMap" type="ru.rerumu.lists.model.BookStatus">
        <result column="status_id" property="statusId" />
        <result column="status_name" property="name" />
    </resultMap>


    <select id="getOne" resultMap="BookResultMap">
        select  b.book_id,
                b.list_list_id,
                b.title,
                b.status_status_id,
                b.insert_date AT TIME ZONE 'UTC' as insert_date,
                b.last_update_date AT TIME ZONE 'UTC' as last_update_date,
                b.last_chapter,
                ba.author_author_id,
                sb.series_series_id,
                sb.series_order,
                s."STATUS_ID" as status_id,
                s."NAME" as status_name,
                a.author_id,
                a.list_list_id as author_list_id,
                a.name as author_name
        from lists.books b
             inner join lists.statuses s
                        on s."STATUS_ID"= b.status_status_id
             left outer join lists.books_authors ba
                                 on ba.book_book_id = b.book_id
                                 and ba.book_list_id = b.list_list_id
                                 and ba.author_list_id = b.list_list_id
             left outer join lists.authors a
                                on a.author_id = ba.author_author_id
                                and a.list_list_id = ba.author_list_id
             left outer join lists.series_books sb
                                on sb.book_book_id = b.book_id
                                and sb.book_list_id = b.list_list_id
                                and sb.series_list_id = b.list_list_id
        where b.book_id=#{bookId}
        and b.list_list_id=#{readListId}
    </select>

    <select id="getAll" resultMap="BookResultMap">
        SELECT          b.book_id,
                        b.list_list_id,
                        b.title,
                        b.status_status_id,
                        b.insert_date at      time zone 'UTC' AS insert_date,
                        b.last_update_date at time zone 'UTC' AS last_update_date,
                        b.last_chapter,
                        ba.author_author_id,
                        sb.series_series_id,
                        sb.series_order,
                        s."STATUS_ID" as status_id,
                        s."NAME" as status_name,
                        a.author_id,
                        a.list_list_id as author_list_id,
                        a.name as author_name
        FROM            lists.books b
        inner join lists.statuses s
        on s."STATUS_ID"= b.status_status_id
        LEFT OUTER JOIN lists.books_authors ba
        ON              ba.book_book_id = b.book_id
        AND             ba.book_list_id = b.list_list_id
        AND             ba.author_list_id = b.list_list_id
        left outer join lists.authors a
        on a.author_id = ba.author_author_id
        and a.list_list_id = ba.author_list_id
        LEFT OUTER JOIN lists.series_books sb
        ON              sb.book_book_id = b.book_id
        AND             sb.book_list_id = b.list_list_id
        AND             sb.series_list_id = b.list_list_id
        WHERE           b.list_list_id=#{readListId}
    </select>

    <update id="update">
        update lists.books
        set title=#{title},
            status_status_id=#{statusId},
            insert_date=#{insertDate},
            last_update_date=#{lastUpdateDate},
            last_chapter = #{lastChapter}
        where book_id=#{bookId}
        and list_list_id=#{readListId}
    </update>

    <update id="updateAuthor">
        update lists.books_authors
        set author_author_id=#{authorId},
            author_list_id=#{authorListId}
        where book_book_id=#{bookId}
        and book_list_id=#{readListId}
    </update>

    <select id="getNextId" resultType="Long">
        select max(book_id)+1 as res
        from lists.books
    </select>

</mapper>